@charset "UTF-8";
/**
 * Version: 1.0.0
 */

@mixin box-shadow($shadows...) {
	-moz-box-shadow: $shadows;
	-webkit-box-shadow: $shadows;
	box-shadow: $shadows;
}

@mixin transition($transition...) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-ms-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

@mixin transform($rotate, $scale, $skew, $translate) {
	transform: rotate($rotate) scale($scale) skew($skew) translate($translate);
	-webkit-transform: rotate($rotate) scale($scale) skew($skew) translate($translate);
	-moz-transform: rotate($rotate) scale($scale) skew($skew) translate($translate);
	-o-transform: rotate($rotate) scale($scale) skew($skew) translate($translate);
	-ms-transform: rotate($rotate) scale($scale) skew($skew) translate($translate);
}

/**
  Gradiente vertical
  @param $cor1 cor inicial
  @param $cor2 cor final
 */
@mixin gradient-vertical($cor1, $cor2) {
	background: -moz-linear-gradient(top, $cor1 0%, $cor2 100%);
	background: -webkit-gradient(left top, left bottom, color-stop(0%, $cor1), color-stop(100%, $cor2));
	background: -webkit-linear-gradient(top, $cor1 0%, $cor2 100%);
	background: -o-linear-gradient(top, $cor1 0%, $cor2 100%);
	background: -ms-linear-gradient(top, $cor1 0%, $cor2 100%);
	background: linear-gradient(to bottom, $cor1 0%, $cor2 100%);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#5c5c5c', endColorstr='#616161', GradientType=0);
}

/**
  Gradiente horizontal
  @param $cor1 cor inicial
  @param $cor2 cor final
 */
@mixin gradient-horizontal($cor1, $cor2) {
	background: -moz-linear-gradient(left, $cor1 0%, $cor2 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, right top, color-stop(0%, $cor1), color-stop(100%, $cor2)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(left, $cor1 0%, $cor2 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(left, $cor1 0%, $cor2 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(left, $cor1 0%, $cor2 100%); /* IE10+ */
	background: linear-gradient(to right, $cor1 0%, $cor2 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#00ffffff', GradientType=1); /* IE6-8 */
}

@mixin font-face($font-family, $font-filename, $font-weight : normal, $font-style :normal, $font-stretch : normal) {
	$path: '../../font/';
	@font-face {
		font-family: '#{$font-family}';
		src: url($path + '#{$font-filename}.eot');
		src: url($path + '#{$font-filename}.eot?#iefix') format('embedded-opentype'),
		url($path + '#{$font-filename}.woff2') format('woff2'),
		url($path + '#{$font-filename}.woff') format('woff'),
		url($path + '#{$font-filename}.ttf') format('truetype'),
		url($path + '#{$font-filename}.svg##{$font-family}') format('svg');
		font-weight: $font-weight;
		font-style: $font-style;
		font-stretch: $font-stretch;
	}
}

@mixin media-query($point) {
	@if $point == xlg {
		@media (min-width: 1600px) {
			@content;
		}
	} @else if $point == lg {
		@media (min-width: 1200px) {
			@content;
		}
	} @else if $point == md {
		@media (min-width: 992px) {
			@content;
		}
	} @else if $point == sm {
		@media (min-width: 768px) {
			@content;
		}
	} @else if $point == xs {
		@media (max-width: 767px) {
			@content;
		}
	}
}

/**
Stylization of form placeholder
*/
@mixin input-placeholder() {
	// need to be separated because browser can invalidate the whole group
	&::-webkit-input-placeholder {
		@content;
	}

	&:-moz-placeholder {
		@content;
	}

	&::-moz-placeholder {
		@content;
	}

	&:-ms-input-placeholder {
		@content;
	}
}

/**
 Clearfix
 For modern browsers
 1. The space content is one way to avoid an Opera bug when the
    contenteditable attribute is included anywhere else in the document.
    Otherwise it causes space to appear at the top and bottom of elements
    that are clearfixed.
 2. The use of `table` rather than `block` is only necessary if using
    `:before` to contain the top-margins of child elements.

 Source: http://nicolasgallagher.com/micro-clearfix-hack/
 */
@mixin clearfix() {
	&:before,
	&:after {
		content: " "; // 1
		display: table; // 2
	}
	&:after {
		clear: both;
	}
}
